.. _arch_overview_overload_manager:

负载管理
================

负载管理是一个用于保护Envoy服务器避免因太多的客户端连接或请求而导致各种资源(例如内存、CPU或文件描述符)负载太重的可扩展组件。注意它与 :ref:`断路器 <arch_overview_circuit_break>` 不同，后者的主要目的是用于保护上游服务。

负载管理是可以 :ref:`配置 <config_overload_manager>` 的，可以配置一组被监控的资源，并可以定义当资源的压力超过阈值时该如何操作。

架构
------------

负载管理的工作机制是：周期性地检测**资源**的*压力*并把值传递给**触发器**，由触发器来执行**操作**。资源监视器、触发器和动作都是在启动时就配置好的。

资源
~~~~~~~~~

资源是可以被负载管理监控着的，它们的*压力*表示为[0,1]这个区间的值。资源的压力是由*资源监视器*评估计算的。参考 :ref:`配置 <config_overload_manager>` 页面进行资源监视器的配置。

触发器
~~~~~~~~

触发器负责在每一次资源压力更新时进行评测，并把压力转换为一个操作状态。操作状态有一个处于[0,1]之间的值，并分为以下两组:

.. _arch_overview_overload_manager-triggers-state:

.. csv-table::
  :header: 操作状态, 值, 描述
  :widths: 1, 1, 2

  scaling,   "[0, 1)", 资源的压力低于配置项中的阈值，操作可能会被执行
  saturated, 1, 资源的压力等于或高于配置项中的阈值，操作一定会被执行

只要资源压力值更新后，相关的触发器就会再次进行评估。每个操作至少关联着一个触发器，操作状态的值的计算结果是超过阈值的那个最大值。操作状态产生的效果取决于操作的配置和具体实现。

操作
~~~~~~~

当一个触发器改变了状态，值就会被发送给注册好的操作，操作就会影响着多少连接和请求能被处理。每个操作都可以解析到来的不同状态值，有些操作的行为可能是完全忽略*scaling*状态，只有超过*saturated*的时候才有效果。